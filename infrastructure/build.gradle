buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.4.0'
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '3.4.0.2513'
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'org.flywaydb.flyway' version '9.4.0'
}

group 'br.com.lukinhasssss.admin.catalogo.infrastructure'
version '1.0-SNAPSHOT'

bootJar {
    archiveName 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation 'io.vavr:vavr:0.10.4'

    implementation('mysql:mysql-connector-java')

    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.6.11')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.14.0-rc1') // Dependencia utilizada para corrigir vulnerabilidade na 'springdoc-openapi-webmvc-core'
    implementation('org.yaml:snakeyaml:1.33') // Dependencia utilizada para corrigir vulnerabilidade na 'springdoc-openapi-webmvc-core'
    implementation('org.springdoc:springdoc-openapi-ui:1.6.11')

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.flywaydb:flyway-core')

    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASSWORD') ?: 'password'
}

test {
    useJUnitPlatform()
}